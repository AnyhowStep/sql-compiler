SELECT SUBSTRING(a FROM)
-----
`!
          (expression: SubstringFunctionCall[7, 24]
            (functionName: SUBSTRING[7, 16])
            (arguments: Substring_Arguments_From[16, 24]
              (openParenthesesToken: OpenParentheses[16, 17])
              (str: Identifier[17, 18])
              (WhiteSpace[18, 19])
              (fromToken: FROM[19, 23])
              (Expected startPosition: Identifier[23, 23])
              (closeParenthesesToken: CloseParentheses[23, 24])
            )
          )
!`
-----
SELECT SUBSTRING(FROM b)
-----
`!
          (expression: SubstringFunctionCall[7, 24]
            (functionName: SUBSTRING[7, 16])
            (arguments: Substring_Arguments_From[16, 24]
              (openParenthesesToken: OpenParentheses[16, 17])
              (Expected str: Identifier[17, 17])
              (fromToken: FROM[17, 21])
              (WhiteSpace[21, 22])
              (startPosition: Identifier[22, 23])
              (closeParenthesesToken: CloseParentheses[23, 24])
            )
          )
!`
-----
SELECT SUBSTRING(a FROM b)
-----
`!
          (expression: SubstringFunctionCall[7, 26]
            (functionName: SUBSTRING[7, 16])
            (arguments: Substring_Arguments_From[16, 26]
              (openParenthesesToken: OpenParentheses[16, 17])
              (str: Identifier[17, 18])
              (WhiteSpace[18, 19])
              (fromToken: FROM[19, 23])
              (WhiteSpace[23, 24])
              (startPosition: Identifier[24, 25])
              (closeParenthesesToken: CloseParentheses[25, 26])
            )
          )
!`
-----
SELECT SUBSTRING(a FROM b FOR)
-----
`!
          (expression: SubstringFunctionCall[7, 30]
            (functionName: SUBSTRING[7, 16])
            (arguments: Substring_Arguments_From[16, 30]
              (openParenthesesToken: OpenParentheses[16, 17])
              (str: Identifier[17, 18])
              (WhiteSpace[18, 19])
              (fromToken: FROM[19, 23])
              (WhiteSpace[23, 24])
              (startPosition: Identifier[24, 25])
              (WhiteSpace[25, 26])
              (forLength: ForLength[26, 29]
                (forToken: FOR[26, 29])
                (Expected length: Identifier[29, 29])
              )
              (closeParenthesesToken: CloseParentheses[29, 30])
            )
          )
!`
-----
SELECT SUBSTRING(a FROM b FOR c)
-----
`!
          (expression: SubstringFunctionCall[7, 32]
            (functionName: SUBSTRING[7, 16])
            (arguments: Substring_Arguments_From[16, 32]
              (openParenthesesToken: OpenParentheses[16, 17])
              (str: Identifier[17, 18])
              (WhiteSpace[18, 19])
              (fromToken: FROM[19, 23])
              (WhiteSpace[23, 24])
              (startPosition: Identifier[24, 25])
              (WhiteSpace[25, 26])
              (forLength: ForLength[26, 31]
                (forToken: FOR[26, 29])
                (WhiteSpace[29, 30])
                (length: Identifier[30, 31])
              )
              (closeParenthesesToken: CloseParentheses[31, 32])
            )
          )
!`
-----
SELECT SUBSTRING(a FROM b FOR c, d)
-----
`!
          (expression: SubstringFunctionCall[7, 35]
            (functionName: SUBSTRING[7, 16])
            ({Expected exactly 0 extraItem, found 1} arguments: Substring_Arguments_From[16, 35]
              (openParenthesesToken: OpenParentheses[16, 17])
              (str: Identifier[17, 18])
              (WhiteSpace[18, 19])
              (fromToken: FROM[19, 23])
              (WhiteSpace[23, 24])
              (startPosition: Identifier[24, 25])
              (WhiteSpace[25, 26])
              (forLength: ForLength[26, 31]
                (forToken: FOR[26, 29])
                (WhiteSpace[29, 30])
                (length: Identifier[30, 31])
              )
              (commaToken[]: Comma[31, 32])
              (WhiteSpace[32, 33])
              (extraItem[]: Identifier[33, 34])
              (closeParenthesesToken: CloseParentheses[34, 35])
            )
          )
!`
-----
SELECT SUBSTRING(a FROM b FOR c, d, e)
-----
`!
          (expression: SubstringFunctionCall[7, 38]
            (functionName: SUBSTRING[7, 16])
            ({Expected exactly 0 extraItem, found 2} arguments: Substring_Arguments_From[16, 38]
              (openParenthesesToken: OpenParentheses[16, 17])
              (str: Identifier[17, 18])
              (WhiteSpace[18, 19])
              (fromToken: FROM[19, 23])
              (WhiteSpace[23, 24])
              (startPosition: Identifier[24, 25])
              (WhiteSpace[25, 26])
              (forLength: ForLength[26, 31]
                (forToken: FOR[26, 29])
                (WhiteSpace[29, 30])
                (length: Identifier[30, 31])
              )
              (commaToken[]: Comma[31, 32])
              (WhiteSpace[32, 33])
              (extraItem[]: Identifier[33, 34])
              (commaToken[]: Comma[34, 35])
              (WhiteSpace[35, 36])
              (extraItem[]: Identifier[36, 37])
              (closeParenthesesToken: CloseParentheses[37, 38])
            )
          )
!`
-----
SELECT SUBSTRING(a FROM b, c)
-----
`!
          (expression: SubstringFunctionCall[7, 29]
            (functionName: SUBSTRING[7, 16])
            ({Expected exactly 0 extraItem, found 1} arguments: Substring_Arguments_From[16, 29]
              (openParenthesesToken: OpenParentheses[16, 17])
              (str: Identifier[17, 18])
              (WhiteSpace[18, 19])
              (fromToken: FROM[19, 23])
              (WhiteSpace[23, 24])
              (startPosition: Identifier[24, 25])
              (commaToken[]: Comma[25, 26])
              (WhiteSpace[26, 27])
              (extraItem[]: Identifier[27, 28])
              (closeParenthesesToken: CloseParentheses[28, 29])
            )
          )
!`
-----
SELECT SUBSTRING(a FROM b, c, d)
-----
`!
          (expression: SubstringFunctionCall[7, 32]
            (functionName: SUBSTRING[7, 16])
            ({Expected exactly 0 extraItem, found 2} arguments: Substring_Arguments_From[16, 32]
              (openParenthesesToken: OpenParentheses[16, 17])
              (str: Identifier[17, 18])
              (WhiteSpace[18, 19])
              (fromToken: FROM[19, 23])
              (WhiteSpace[23, 24])
              (startPosition: Identifier[24, 25])
              (commaToken[]: Comma[25, 26])
              (WhiteSpace[26, 27])
              (extraItem[]: Identifier[27, 28])
              (commaToken[]: Comma[28, 29])
              (WhiteSpace[29, 30])
              (extraItem[]: Identifier[30, 31])
              (closeParenthesesToken: CloseParentheses[31, 32])
            )
          )
!`
-----
SELECT SUBSTRING(a FROM b, c, d, e)
-----
`!
          (expression: SubstringFunctionCall[7, 35]
            (functionName: SUBSTRING[7, 16])
            ({Expected exactly 0 extraItem, found 3} arguments: Substring_Arguments_From[16, 35]
              (openParenthesesToken: OpenParentheses[16, 17])
              (str: Identifier[17, 18])
              (WhiteSpace[18, 19])
              (fromToken: FROM[19, 23])
              (WhiteSpace[23, 24])
              (startPosition: Identifier[24, 25])
              (commaToken[]: Comma[25, 26])
              (WhiteSpace[26, 27])
              (extraItem[]: Identifier[27, 28])
              (commaToken[]: Comma[28, 29])
              (WhiteSpace[29, 30])
              (extraItem[]: Identifier[30, 31])
              (commaToken[]: Comma[31, 32])
              (WhiteSpace[32, 33])
              (extraItem[]: Identifier[33, 34])
              (closeParenthesesToken: CloseParentheses[34, 35])
            )
          )
!`
-----
SELECT SUBSTRING(a, b FOR c)
-----
`!
          (expression: SubstringFunctionCall[7, 28]
            (functionName: SUBSTRING[7, 16])
            (arguments: Expression2To3_Arguments[16, 28]
              (openParenthesesToken: OpenParentheses[16, 17])
              (item[]: Identifier[17, 18])
              (commaToken[]: Comma[18, 19])
              (WhiteSpace[19, 20])
              (item[]: Identifier[20, 21])
              (WhiteSpace[21, 22])
              (Expected commaToken[]: Comma[22, 25])
              (WhiteSpace[25, 26])
              (item[]: Identifier[26, 27])
              (closeParenthesesToken: CloseParentheses[27, 28])
            )
          )
!`
-----
SELECT SUBSTRING(a, b FOR c, d)
-----
`!
          (expression: SubstringFunctionCall[7, 31]
            (functionName: SUBSTRING[7, 16])
            ({Expected 2 - 3 item, found 4} arguments: Expression2To3_Arguments[16, 31]
              (openParenthesesToken: OpenParentheses[16, 17])
              (item[]: Identifier[17, 18])
              (commaToken[]: Comma[18, 19])
              (WhiteSpace[19, 20])
              (item[]: Identifier[20, 21])
              (WhiteSpace[21, 22])
              (Expected commaToken[]: Comma[22, 25])
              (WhiteSpace[25, 26])
              (item[]: Identifier[26, 27])
              (commaToken[]: Comma[27, 28])
              (WhiteSpace[28, 29])
              (item[]: Identifier[29, 30])
              (closeParenthesesToken: CloseParentheses[30, 31])
            )
          )
!`
-----
SELECT SUBSTRING(a, b FOR c, d, e)
-----
`!
          (expression: SubstringFunctionCall[7, 34]
            (functionName: SUBSTRING[7, 16])
            ({Expected 2 - 3 item, found 5} arguments: Expression2To3_Arguments[16, 34]
              (openParenthesesToken: OpenParentheses[16, 17])
              (item[]: Identifier[17, 18])
              (commaToken[]: Comma[18, 19])
              (WhiteSpace[19, 20])
              (item[]: Identifier[20, 21])
              (WhiteSpace[21, 22])
              (Expected commaToken[]: Comma[22, 25])
              (WhiteSpace[25, 26])
              (item[]: Identifier[26, 27])
              (commaToken[]: Comma[27, 28])
              (WhiteSpace[28, 29])
              (item[]: Identifier[29, 30])
              (commaToken[]: Comma[30, 31])
              (WhiteSpace[31, 32])
              (item[]: Identifier[32, 33])
              (closeParenthesesToken: CloseParentheses[33, 34])
            )
          )
!`
